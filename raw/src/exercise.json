[
  {
    "id": "1.1",
    "name": "Exercise 1.1.",
    "line": "Two stations are &lsquo;not too far&rsquo; if they are on the same or a different line, with at most one station in between. Define rules for the predicate `not_too_far`.",
    "content": "{{ code['1.0.4'] }}"
  },
  {
    "id": "1.2",
    "name": "Exercise 1.2.",
    "line": "Construct the proof trees for the query",
    "content": "`?-nearby(W,charing_cross)`."
  },
  {
    "id": "1.3",
    "name": "Exercise 1.3.",
    "line": "Give a third proof tree for the answer `{ W â†’ leicester_square }`, and change the order of the facts for connectedness, such that this proof tree is constructed first.",
    "content": ""
  },
  {
    "id": "1.4",
    "name": "Exercise 1.4.",
    "line": "A list is either the empty list `[]`, or a non-empty list `[First|Rest]` where `Rest` is a list. Define a relation `list(L)`, which checks whether `L` is a list. Adapt it such that it succeeds only for lists of (`i`) even length and (`ii`) odd length.",
    "content": ""
  },
  {
    "id": "1.5",
    "name": "Exercise 1.5.",
    "line": "Construct a query asking for a route from Bond Street to Piccadilly Circus with at least two intermediate stations.",
    "content": ""
  }
]
